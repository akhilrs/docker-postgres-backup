ARG BASETAG=alpine
FROM alpine:$BASETAG
ARG TARGETARCH

RUN apk update && upgrade

# install pg_dump
RUN apk add postgresql-client


RUN set -x \
	&& apk update && apk upgrade && \
    apk add ca-certificates tar gzip curl \
	&& curl -L https://github.com/prodrigestivill/go-cron/releases/download/$GOCRONVER/go-cron-$TARGETOS-$TARGETARCH-static.gz | zcat -f  > /usr/local/bin/go-cron \
	&& chmod a+x /usr/local/bin/go-cron \
	&& apk del ca-certificates curl



ENV POSTGRES_DB="**None**" \
    POSTGRES_DB_FILE="**None**" \
    POSTGRES_HOST="**None**" \
    POSTGRES_PORT=5432 \
    POSTGRES_USER="**None**" \
    POSTGRES_USER_FILE="**None**" \
    POSTGRES_PASSWORD="**None**" \
    POSTGRES_PASSWORD_FILE="**None**" \
    POSTGRES_EXTRA_OPTS="-Z9" \
    CLOUD_BACKUP=False \
    CLOUD_PROVIDER="**None**" \
    SCHEDULE="@daily" \
    BACKUP_DIR="./backups" \
    BACKUP_KEEP_DAYS=7 \
    BACKUP_KEEP_WEEKS=2 \
    BACKUP_KEEP_MONTHS=1 \
    HEALTHCHECK_PORT=8080 \
    AZURE_SA_CONTAINER="**None**" \
    AZURE_SA_CONNECTION_STRING="**None**" \
    AWS_REGION="**None**" \
    AWS_ACCESS_KEY="**None**" \
    AWS_SECRET_KEY="**None**" \
    AWS_S3_BUCKET="**None**" \
    S3_SUB_FOLDER="**None**"



# install gpg
RUN apk add gnupg

# Install Python3
RUN apk add python3 py3-pip python3-dev

# install dependency packages
RUN apk add gcc musl-dev libffi-dev rust

# upgrade pip
RUN pip3 install pip --upgrade

RUN pip3 install azure-storage-blob==12.7.1 aiohttp==3.7.3 aioboto3==8.2.0


# cleanup
RUN apk del gcc python3-dev musl-dev libffi-dev rust
RUN rm -rf /var/cache/apk/*

COPY scripts/backup.sh /backup.sh
COPY scripts/azblob_async.py /azblob_async.py
COPY scripts/aws_async.py /aws_async.py

VOLUME /backups

ENTRYPOINT ["/bin/sh", "-c"]
CMD ["exec /usr/local/bin/go-cron -s \"$SCHEDULE\" -p \"$HEALTHCHECK_PORT\" -- /backup.sh"]

HEALTHCHECK --interval=5m --timeout=3s \
  CMD curl -f "http://localhost:$HEALTHCHECK_PORT/" || exit 1